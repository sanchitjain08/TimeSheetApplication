// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TimeSheetApplication.Models;

#nullable disable

namespace TimeSheetApplication.Migrations
{
    [DbContext(typeof(TimeSheetApplicationContext))]
    [Migration("20230111125244_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TimeSheetApplication.Models.Employee", b =>
                {
                    b.Property<string>("EmployeeEmail")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Employee_Email");

                    b.Property<string>("EmployeeDesignation")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Employee_Designation");

                    b.Property<string>("EmployeeFirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Employee_FirstName");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int")
                        .HasColumnName("Employee_ID");

                    b.Property<DateTime>("EmployeeJoiningDate")
                        .HasColumnType("date")
                        .HasColumnName("Employee_JoiningDate");

                    b.Property<string>("EmployeeLastName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Employee_LastName");

                    b.Property<DateTime?>("EmployeeLeavingDate")
                        .HasColumnType("date")
                        .HasColumnName("Employee_LeavingDate");

                    b.Property<string>("EmployeePassword")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Employee_Password");

                    b.Property<byte?>("EmployeeStatus")
                        .HasColumnType("tinyint")
                        .HasColumnName("Employee_Status");

                    b.HasKey("EmployeeEmail")
                        .HasName("PK__Employee__616BAD36D173ED57");

                    b.HasIndex(new[] { "EmployeeId" }, "UQ__Employee__78113480F6383760")
                        .IsUnique();

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("TimeSheetApplication.Models.TaskList", b =>
                {
                    b.Property<int>("TaskId")
                        .HasColumnType("int")
                        .HasColumnName("Task_Id");

                    b.Property<string>("EmployeeEmail")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Employee_Email");

                    b.Property<DateTime?>("TaskCompletion")
                        .HasColumnType("datetime")
                        .HasColumnName("Task_Completion");

                    b.Property<DateTime>("TaskCraeted")
                        .HasColumnType("datetime")
                        .HasColumnName("Task_Craeted");

                    b.Property<DateTime>("TaskDeadline")
                        .HasColumnType("datetime")
                        .HasColumnName("Task_Deadline");

                    b.Property<string>("TaskDetails")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Task_Details");

                    b.Property<byte>("TaskType")
                        .HasColumnType("tinyint")
                        .HasColumnName("Task_Type");

                    b.HasKey("TaskId")
                        .HasName("PK__TaskList__716F4AEDBB0F4CA2");

                    b.HasIndex("EmployeeEmail");

                    b.ToTable("TaskList", (string)null);
                });

            modelBuilder.Entity("TimeSheetApplication.Models.TimeSheet", b =>
                {
                    b.Property<int>("TimeSheetId")
                        .HasColumnType("int")
                        .HasColumnName("TimeSheet_Id");

                    b.Property<byte?>("ApprovalStatus")
                        .HasColumnType("tinyint")
                        .HasColumnName("Approval_Status");

                    b.Property<string>("EmployeeEmail")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Employee_Email");

                    b.Property<int>("TaskId")
                        .HasColumnType("int")
                        .HasColumnName("Task_Id");

                    b.HasKey("TimeSheetId")
                        .HasName("PK__TimeShee__D0EF8CC805B24816");

                    b.HasIndex("EmployeeEmail");

                    b.HasIndex("TaskId");

                    b.ToTable("TimeSheet", (string)null);
                });

            modelBuilder.Entity("TimeSheetApplication.Models.TaskList", b =>
                {
                    b.HasOne("TimeSheetApplication.Models.Employee", "EmployeeEmailNavigation")
                        .WithMany("TaskLists")
                        .HasForeignKey("EmployeeEmail")
                        .IsRequired()
                        .HasConstraintName("FK__TaskList__Employ__5CD6CB2B");

                    b.Navigation("EmployeeEmailNavigation");
                });

            modelBuilder.Entity("TimeSheetApplication.Models.TimeSheet", b =>
                {
                    b.HasOne("TimeSheetApplication.Models.Employee", "EmployeeEmailNavigation")
                        .WithMany("TimeSheets")
                        .HasForeignKey("EmployeeEmail")
                        .IsRequired()
                        .HasConstraintName("FK__TimeSheet__Emplo__5FB337D6");

                    b.HasOne("TimeSheetApplication.Models.TaskList", "Task")
                        .WithMany("TimeSheets")
                        .HasForeignKey("TaskId")
                        .IsRequired()
                        .HasConstraintName("FK__TimeSheet__Task___60A75C0F");

                    b.Navigation("EmployeeEmailNavigation");

                    b.Navigation("Task");
                });

            modelBuilder.Entity("TimeSheetApplication.Models.Employee", b =>
                {
                    b.Navigation("TaskLists");

                    b.Navigation("TimeSheets");
                });

            modelBuilder.Entity("TimeSheetApplication.Models.TaskList", b =>
                {
                    b.Navigation("TimeSheets");
                });
#pragma warning restore 612, 618
        }
    }
}
